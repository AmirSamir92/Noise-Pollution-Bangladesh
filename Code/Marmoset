// Copyright 2015 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// FirebaseDemo_ESP8266 is a sample that demo the different functions
// of the FirebaseArduino API.

#include <ESP8266WiFi.h>
#include <FirebaseArduino.h>

// Set these to run example.
#define FIREBASE_HOST "noise-in-dhaka.firebaseio.com"
#define FIREBASE_AUTH "eAhpQA5neROf5dAOAbIjpoydwSYqzeepjQyNDjex"
#define WIFI_SSID "Doze@Tauseef"
#define WIFI_PASSWORD "Sinatra1987"
const int SenOut =A0;
int sensorValue = 0;
String location="Dhanmondi";

void setup() {
  Serial.begin(9600);
  pinMode(SenOut,INPUT);

  // connect to wifi.
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println();
  Serial.print("connected: ");
  Serial.println(WiFi.localIP());
  
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
}



void loop() {
int n = 0;

for (int x=0; x<100; x++)
{
  sensorValue = analogRead(SenOut);
  Serial.println(sensorValue);  
  
  if (sensorValue<850)

  {
    n++; 
  }  
}



if (n > 30)
{
  Serial.println("it is loud");
  loud();
}
else if (n >15 && n<30)

{
  Serial.println("it is tolerable");
  calm();
}
else if (n<15)
{
  Serial.println("it is silent");
  quite();
}

  
}

void quite()
{
    String name = Firebase.pushString(location, "quiet");
  // handle error
  if (Firebase.failed()) {
      Serial.print("pushing /logs failed:");
      Serial.println(Firebase.error());  
      return;
  }
  Serial.print("pushed: /logs/");
  Serial.println(name);
  delay(100);

}

void calm()
{
    String name = Firebase.pushString(location, "calm");
  // handle error
  if (Firebase.failed()) {
      Serial.print("pushing /logs failed:");
      Serial.println(Firebase.error());  
      return;
  }
  Serial.print("pushed: /logs/");
  Serial.println(name);
  delay(100);

}

void loud()
{
    String name = Firebase.pushString(location, "loud");
  // handle error
  if (Firebase.failed()) {
      Serial.print("pushing /logs failed:");
      Serial.println(Firebase.error());  
      return;
  }
  
  delay(100);
}
